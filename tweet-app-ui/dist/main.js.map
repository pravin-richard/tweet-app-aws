{"version":3,"sources":["./src/app/my-tweet/my-post/my-post.component.html","./src/app/my-tweet/my-post/my-post.component.ts","./src/app/forget-password/forget-password.component.html","./src/app/forget-password/forget-password.component.ts","./src/app/tweets/reply-tweet/reply-tweet.component.ts","./src/app/tweets/reply-tweet/reply-tweet.component.html","./src/environments/environment.ts","./src/app/my-tweet/my-post-edit/my-post-edit.component.ts","./src/app/my-tweet/my-post-edit/my-post-edit.component.html","./src/app/tweets/post-tweets/post-tweets.component.html","./src/app/tweets/post-tweets/post-tweets.component.ts","./src/app/service/user.service.ts","./src/app/tweets/tweet-info/tweet-info.component.html","./src/app/tweets/tweet-info/tweet-info.component.ts","./src/app/site/login/login.component.html","./src/app/site/login/login.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/site/signup/signup.component.ts","./src/app/site/signup/signup.component.html","./src/app/tweets/search/search.component.ts","./src/app/tweets/search/search.component.html","./src/app/service/tweet.service.ts","./src/app/tweets/tweet/tweet.component.html","./src/app/tweets/tweet/tweet.component.ts","./src/app/app-routing.module.ts","./src/app/my-tweet/my-post-info/my-post-info.component.ts","./src/app/my-tweet/my-post-info/my-post-info.component.html","./src/app/tweets/admin.guard.ts","./src/app/site/header/header.component.html","./src/app/site/header/header.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<!-- <app-search></app-search> -->\n<div class=\"container-fluid mb-5\">\n    <div class=\"row mt-2 mb-5\">\n        <app-my-post-info *ngFor=\"let tweetList of tweet\" [tweetList]=\"tweetList\" class=\"col-12 col-md-6 col-lg-3 mt-4\">\n\n        </app-my-post-info>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Tweet } from 'src/app/tweets/tweet';\nimport { TweetService } from 'src/app/service/tweet.service';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-my-post',\n  templateUrl: './my-post.component.html',\n  styleUrls: ['./my-post.component.css']\n})\nexport class MyPostComponent implements OnInit {\n  'tweet': Tweet[];\n  \"temporaryList\": Tweet[];\n  \"isRemoved\":boolean\n  constructor(private tweetService: TweetService,private userService:UserService) { }\n\n  ngOnInit(): void {\n    this.tweetService.getTweet(this.userService.getLoginId()).subscribe(data=>{\n      this.tweet=data;\n      this.temporaryList=data;\n    })\n  }\n}\n","<div class=\"container-fluid col-12 col-md-8 col-lg-5 mt-5 mb-5\">\n    <ul class=\"list-group text-align-center\">\n        <li class=\"list-group-item\">\n            <form class=\"mt-3 ml-4 mr-4 mb-5\" (ngSubmit)=\"onForget(forgetPasswordForm)\" #forgetPasswordForm=\"ngForm\">\n                <h1>Forgot Password</h1>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-lg-12\">\n                        <div class=\"alert alert-info\" role=\"alert\" *ngIf=\"isInvalid\">\n                            Please Enter the Valid Login Id and password\n                        </div>\n                        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"ispasswordChanged\">\n                            Logged In Successfully\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-lg-12\">\n                        <label for=\"loginId\"></label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Enter LoginId\" id=\"loginId\" ngModel\n                        name=\"loginId\" #loginId=\"ngModel\" required>\n                        <small class=\"form-text text-danger\">\n                            <div *ngIf=\"loginId.touched && !loginId.valid\">Username is required</div>\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-lg-12\">\n                        <label for=\"password\"></label>\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Enter password\" id=\"password\" ngModel\n                        name=\"password\" #password=\"ngModel\" required>\n                        <small class=\"form-text text-danger\">\n                            <div * ngIf=\"password.touched && !password.valid\">Password is required</div>\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-lg-12\">\n                        <label for=\"confirmPassword\"></label>\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Enter confirm password\" id=\"confirmPassword\" ngModel\n                        name=\"confirmPassword\" #confirmPassword=\"ngModel\" required>\n                        <small class=\"form-text text-danger\">\n                            <div * ngIf=\"confirmPassword.touched && !confirmPassword.valid\">Password is required</div>\n                        </small>\n                    </div>\n                </div>\n                \n\n                <div class=\"form-row mt-2\">\n                    <span>\n                        <button type=\"submit\" class=\"btn btn-danger text-align-left\" [disabled]=\"!forgetPasswordForm.valid\">\n                            Reset Password\n                        </button>\n                    </span>\n                </div>\n            </form>\n        </li>\n\n    </ul>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from '../service/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\nexport class ForgetPasswordComponent implements OnInit {\n  \"ispasswordChanged\":boolean;\n  \"isInvalid\": boolean;\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n  }\n\n  onForget(form:NgForm){\n    console.log(form.value);\n    this.userService.forgetPassword(form.value).subscribe(()=>{\n      this.ispasswordChanged=true;\n      setTimeout(() => {\n        this.ispasswordChanged = false;\n        this.router.navigate(['/login']);\n      }, 2000);\n    }, error => {\n      this.isInvalid=true;\n      console.log(\"error\" + JSON.stringify(error));\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { TweetService } from 'src/app/service/tweet.service';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-reply-tweet',\n  templateUrl: './reply-tweet.component.html',\n  styleUrls: ['./reply-tweet.component.css']\n})\nexport class ReplyTweetComponent implements OnInit {\n  \"replyForm\": FormGroup;\n  \"isPost\": boolean ;\n  \"uploadId\":string;\n  constructor(private router: Router,private tweetService:TweetService, private userService: UserService,private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.replyForm = new FormGroup({\n      \"id\":new FormControl(null),\n      \"message\":new FormControl(null,[Validators.required]),\n      \"postId\":new FormControl(null)\n    });\n    this.route.params.subscribe((params:Params)=>{\n      const postId= params['id'];\n      this.uploadId=postId;\n      this.replyForm.patchValue({\n        postId:postId\n      })\n    })\n  \n  }\n  onSubmitReplyForm(){\n    this.tweetService.postReply(this.uploadId,this.userService.getLoginId(),this.replyForm.value).subscribe(()=>{\n      this.isPost = false;\n      setTimeout(() => {\n        this.isPost = false;\n        this.router.navigate(['/tweet']);\n      }, 2000);\n    })\n  }\n\n}\n","<div class=\"container-fluid col-12 col-md-8 col-lg-5 mt-5 mb-5\">\n    <ul class=\"list-group text-align-center\">\n        <li class=\"list-group-item\">\n            <form class=\"mt-3 ml-4 mr-4 mb-5\" [formGroup]=\"replyForm\" (submit)=\"onSubmitReplyForm()\">\n                <h1>Reply Tweet</h1>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-lg-12\">\n                        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"isPost\">\n                            Replied to the Post Successfully\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12  col-lg-12\">\n                        <div class=\"form-group\">\n                            <label for=\"message\"></label>\n                            <input type=\"text\" class=\"form-control textBox\" placeholder=\"Enter your Post\" id=\"message\"\n                                formControlName=\"message\" maxlength=\"120\" required>\n                        </div>\n                    </div>\n                </div>\n                   \n                \n                <div class=\"form-row mt-2\">\n                    <span>\n                        <button type=\"submit\" class=\"btn btn-success text-align-left\" [disabled]=\"!replyForm.valid\">\n                            Post\n                        </button>\n                    </span>\n                </div>\n            </form>\n        </li>\n    </ul>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl:'http://65.2.139.87:8080/api/v1.0/tweets'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { TweetService } from 'src/app/service/tweet.service';\nimport { UserService } from 'src/app/service/user.service';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Tweet } from 'src/app/tweets/tweet';\n\n@Component({\n  selector: 'app-my-post-edit',\n  templateUrl: './my-post-edit.component.html',\n  styleUrls: ['./my-post-edit.component.css']\n})\nexport class MyPostEditComponent implements OnInit {\n  \"editupForm\": FormGroup;\n  \"isPost\": boolean ;\n  \"uploadId\":string;\n\n  constructor(private router: Router,private tweetService:TweetService, private userService: UserService,private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.editupForm = new FormGroup({\n      \"id\":new FormControl(null),\n      \"message\":new FormControl(null,[Validators.required])\n    });\n    this.route.params.subscribe((params:Params)=>{\n      const postId= params['id'];\n      this.uploadId=postId;\n      this.tweetService.getPost(postId).subscribe((tweet:Tweet)=>{\n        if(tweet){\n          this.editupForm.patchValue({\n            id:postId,\n            message:tweet.message\n          })\n        }\n      })\n    })\n    \n  }\n\n  onSubmitEditupForm(){\n    this.tweetService.updateTweet(this.userService.getLoginId(),this.uploadId,this.editupForm.value).subscribe(data=>{\n      this.isPost=true;\n      setTimeout(() => {\n        this.isPost = false;\n        this.router.navigate(['/my-post']);\n      }, 2000);\n    })\n  }\n\n  \n}\n","<div class=\"container-fluid col-12 col-md-8 col-lg-5 mt-5 mb-5\">\n    <ul class=\"list-group text-align-center\">\n        <li class=\"list-group-item\">\n            <form class=\"mt-3 ml-4 mr-4 mb-5\" [formGroup]=\"editupForm\" (submit)=\"onSubmitEditupForm()\">\n                <h1>Edit Tweet</h1>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-lg-12\">\n                        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"isPost\">\n                            Tweet Posted Successfully\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12  col-lg-12\">\n                        <div class=\"form-group\">\n                            <label for=\"message\"></label>\n                            <input type=\"text\" class=\"form-control textBox\" placeholder=\"Enter your Post\" id=\"message\"\n                                formControlName=\"message\" maxlength=\"120\" required>\n                        </div>\n                    </div>\n                </div>\n                   \n                \n                <div class=\"form-row mt-2\">\n                    <span>\n                        <button type=\"submit\" class=\"btn btn-success text-align-left\" [disabled]=\"!editupForm.valid\">\n                            Post\n                        </button>\n                    </span>\n                </div>\n            </form>\n        </li>\n    </ul>\n</div>","<div class=\"container-fluid col-12 col-md-8 col-lg-5 mt-5 mb-5\">\n    <ul class=\"list-group text-align-center\">\n        <li class=\"list-group-item\">\n            <form class=\"mt-3 ml-4 mr-4 mb-5\" (ngSubmit)=\"onSubmit(postForm)\" #postForm=\"ngForm\">\n                <h1>Post Tweet</h1>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-lg-12\">\n                        \n                        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"isPost\">\n                            Tweet Uploaded Successfully\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-lg-12\">\n                        <label for=\"message\"></label>\n                        <input type=\"text\" class=\"form-control textBox\" placeholder=\"Enter the tweet\" id=\"message\" ngModel\n                            name=\"message\" #message=\"ngModel\" maxlength=\"120\" required>\n                        <small class=\"form-text text-danger\">\n                            <div *ngIf=\"message.touched && !message.valid\">Post the Tweet</div>\n                        </small>\n                    </div>\n                </div>\n\n\n                <div class=\"form-row mt-2\">\n                    <span>\n                        <button type=\"submit\" class=\"btn btn-success text-align-left\" [disabled]=\"!postForm.valid\">\n                            Post\n                        </button>\n                    </span>\n\n\n                </div>\n\n            </form>\n        </li>\n\n    </ul>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/service/user.service';\nimport { TweetService } from 'src/app/service/tweet.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-post-tweets',\n  templateUrl: './post-tweets.component.html',\n  styleUrls: ['./post-tweets.component.css']\n})\nexport class PostTweetsComponent implements OnInit {\n  \"isPost\": boolean;\n  \"isInvalid\": boolean;\n  constructor(private router: Router,private tweetService:TweetService, private userService: UserService,private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n  }\n  onSubmit(form: NgForm) {\n    // console.log(form.value.message);\n    this.tweetService.postTweets(form.value,this.userService.getLoginId()).subscribe(()=>{\n      this.isPost = false;\n      setTimeout(() => {\n        this.isPost = false;\n        this.router.navigate(['/tweet']);\n      }, 2000);\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../user';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private loginApiUrl = environment.baseUrl;\n  \"isLoggedIn\": boolean;\n  \"loginId\": string;\n  constructor(private httpClient: HttpClient) { }\n\n  login(user: User): Observable<any> {\n    return this.httpClient.post<void>(this.loginApiUrl + '/login', user);\n  }\n\n  register(user: User): Observable<any> {\n    return this.httpClient.post<void>(this.loginApiUrl + \"/register\", user);\n  }\n\n  forgetPassword(user: User): Observable<any> {\n    return this.httpClient.post<void>(this.loginApiUrl + \"/forgot/\" + user.loginId, user);\n  }\n\n  logout(loginId: string): Observable<any> {\n    return this.httpClient.get<void>(this.loginApiUrl + \"/logout/\" + loginId);\n  }\n\n  getLogInStatus() {\n    return this.isLoggedIn\n  }\n  setlogInStatus(login: boolean) {\n    this.isLoggedIn = login;\n  }\n\n  getLoginId() {\n    return this.loginId;\n  }\n  setLoginId(loginId: string) {\n    this.loginId = loginId;\n  }\n}\n","<div class=\"card cards\">\n    <div class=\"card-body\">\n        <div class=\"card-title\"><i class=\"material-icons icons\">\n                perm_identity\n            </i>\n            <span class=\"text\">{{tweetList.loginId}}</span>\n\n        </div>\n        <hr>\n        <div>\n            {{tweetList.message}}\n        </div>\n        <hr>\n        <div>\n            <span><i class=\"material-icons icons\">\n                    schedule\n                </i> {{postTime}}</span>\n            <span class=\"likecard\"> <button class=\"material-icons icons red\" (click)=\"like(tweetList.id)\">\n                    favorite\n                </button> {{tweetList.like}}</span>\n        </div>\n        <hr>\n\n\n        <div>\n            <span>\n\n                <button class=\"btn btn-primary \" type=\"button\" (click)=\"viewReply(tweetList.id)\" (click)=\"toggleShow()\">\n                    View Reply\n                </button>\n            </span>\n            <span class=\"buttonLeft\">\n                <button class=\"btn btn-primary\" type=\"button\" [routerLink]=\"['/reply',tweetList.id]\">\n                    Post Reply\n                </button>\n            </span>\n            <div class=\"mt-3\" *ngIf=\"isShown\" id=\"divshow\">\n                <div class=\"card card-body\" *ngFor=\"let reply of replyList\">\n                    <div class=\"card-title\"><i class=\"material-icons icons\">\n                            perm_identity\n                        </i>\n                        <span class=\"text\">{{reply.loginId}}</span>\n                    </div>\n                    <hr>\n                    <div>\n                        {{reply.message}}\n                    </div>\n\n                </div>\n            </div>\n            <button class=\"btn btn-primary \" *ngIf=\"isShown\" type=\"button\" (click)=\"toggleHide()\">\n                Hide Reply\n            </button>\n        </div>\n\n\n    </div>\n\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Tweet } from '../tweet';\nimport { TweetService } from 'src/app/service/tweet.service';\nimport { Router } from '@angular/router';\n\nimport { UserService } from 'src/app/service/user.service';\nimport { ReplyTweets } from '../reply-tweets';\n\n\n@Component({\n  selector: 'app-tweet-info',\n  templateUrl: './tweet-info.component.html',\n  styleUrls: ['./tweet-info.component.css']\n})\nexport class TweetInfoComponent implements OnInit {\n  @Input() \"tweetList\": Tweet;\n  \"postTime\": string;\n  \"hours\": number;\n  \"minutes\": number;\n  \"seconds\": number;\n  \"replyList\": ReplyTweets[];\n  buttonName: any = 'Show';\n  show: boolean = false;\n\n  constructor(private tweetService: TweetService, private router: Router, private userService: UserService) { }\n\n  ngOnInit(): void {\n\n    let currentDate = new Date();\n    let oldDate = new Date(this.tweetList.postTime)\n\n\n    const totalSeconds = Math.floor(Math.abs((oldDate.getTime() - currentDate.getTime()) / 1000));\n\n    const totalMinutes = Math.floor(totalSeconds / 60);\n    const totalHours = Math.floor(totalMinutes / 60);\n    const totalDays = Math.floor(totalHours / 24);\n\n    this.hours = totalHours - (totalDays * 24);\n    this.minutes = totalMinutes - (totalDays * 24 * 60) - (this.hours * 60);\n    this.seconds = totalSeconds - (totalDays * 24 * 60 * 60) - (this.hours * 60 * 60) - (this.minutes * 60);\n\n    if ((this.hours > 0 && this.hours < 24) && (this.minutes >= 0 && this.minutes <= 59) && (this.seconds >= 0 && this.seconds <= 59)) {\n      this.postTime = this.hours + \" hr \" + this.minutes + \" m \" + this.seconds + \" s ago\"\n    }\n    if (this.hours == 0 && this.minutes == 0) {\n      this.postTime = this.seconds + \" s ago\"\n\n    }\n    if (this.hours == 0) {\n      this.postTime = this.minutes + \" m \" + this.seconds + \" s ago\"\n    }\n    if (this.hours > 24) {\n      this.postTime = oldDate.toDateString();\n    }\n  }\n  toggleOn() {\n    this.show = !this.show;\n    if (this.show) {\n      this.buttonName = \"show\"\n    }\n  }\n  isShown: boolean = false; // hidden by default\n\n  like(id: string) {\n    this.tweetService.postLike(id, this.userService.getLoginId()).subscribe(() => {\n     this.router.navigate(['/my-post'])\n    })\n  }\n\n  toggleShow() {\n\n    this.isShown = true;\n\n  }\n  toggleHide() {\n    this.isShown = false;\n  }\n\n  viewReply(id: string) {\n    this.tweetService.getReply(id, this.userService.getLoginId()).subscribe((data) => {\n      console.log(id)\n      this.replyList = data;\n      console.log(this.replyList)\n    })\n  }\n\n}\n","<div class=\"container-fluid col-12 col-md-8 col-lg-5 mt-5 mb-5\">\n    <ul class=\"list-group text-align-center\">\n        <li class=\"list-group-item\">\n            <form class=\"mt-3 ml-4 mr-4 mb-5\" (ngSubmit)=\"onSubmit(loginForm)\" #loginForm=\"ngForm\">\n                <h1>Login</h1>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-lg-12\">\n                        <div class=\"alert alert-info\" role=\"alert\" *ngIf=\"isInvalid\">\n                            Invalid Username / Password\n                        </div>\n                        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"isLoggedIn\">\n                            Logged In Successfully\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-lg-12\">\n                        <label for=\"loginId\"></label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Enter LoginId\" id=\"loginId\" ngModel\n                        name=\"loginId\" #loginId=\"ngModel\" required>\n                        <small class=\"form-text text-danger\">\n                            <div *ngIf=\"loginId.touched && !loginId.valid\">Username is required</div>\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-lg-12\">\n                        <label for=\"password\"></label>\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Enter password\" id=\"password\" ngModel\n                        name=\"password\" #username=\"ngModel\" required>\n                        <small class=\"form-text text-danger\">\n                            <div * ngIf=\"password.touched && !password.valid\">Password is required</div>\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-row mt-2\">\n                    <span class=\"text-align-left\">\n                        <a class=\"signup\" routerLink=\"/forget\">Forget password ?</a>\n                    </span>\n                </div>\n\n                <div class=\"form-row mt-2\">\n                    <span>\n                        <button type=\"submit\" class=\"btn btn-danger text-align-left\" [disabled]=\"!loginForm.valid\">\n                            Login\n                        </button>\n                    </span>\n                    <span class = \"ml-auto text-muted\">New here?\n                        <a class=\"signup\" routerLink=\"/signup\">Signup</a>\n                    </span>\n\n                </div>\n\n            </form>\n        </li>\n\n    </ul>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { NgForm } from '@angular/forms';\nimport { JsonPipe } from '@angular/common';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \"isLoggedIn\": boolean;\n  \"isInvalid\": boolean;\n  constructor(private router: Router, private userService: UserService,private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n  }\n  onSubmit(form: NgForm) {\n    console.log(form);\n    console.log(\"form value\", form.value);\n    console.log(\"login id\",form.value.loginId);\n    this.userService.login(form.value).subscribe(data => {\n      this.isLoggedIn = true;\n      this.isInvalid = false;\n      this.userService.setlogInStatus(this.isLoggedIn);\n      this.userService.setLoginId(form.value.loginId);\n      setTimeout(() => {\n        this.isLoggedIn = false;\n        this.router.navigate(['/tweet']);\n      }, 2000);\n\n    }, error => {\n      console.log(\"error\" + JSON.stringify(error));\n      this.isLoggedIn = false;\n      this.isInvalid = true;\n      this.userService.setlogInStatus(this.isLoggedIn);\n    })\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tweet-app-ui';\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<footer class=\"footer\">\r\n    <nav class=\"navbar navbar-dark fixed-bottom\">\r\n      <div class=\"text-color-white\">\r\n        Copyright©2021\r\n      </div>\r\n    </nav>\r\n  </footer>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './site/login/login.component';\nimport { SignupComponent } from './site/signup/signup.component';\nimport { HeaderComponent } from './site/header/header.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\nimport { SearchComponent } from './tweets/search/search.component';\nimport { TweetInfoComponent } from './tweets/tweet-info/tweet-info.component';\nimport { TweetComponent } from './tweets/tweet/tweet.component';\nimport { PostTweetsComponent } from './tweets/post-tweets/post-tweets.component';\nimport { MyPostComponent } from './my-tweet/my-post/my-post.component';\nimport { MyPostInfoComponent } from './my-tweet/my-post-info/my-post-info.component';\nimport { MyPostEditComponent } from './my-tweet/my-post-edit/my-post-edit.component';\nimport { ReplyTweetComponent } from './tweets/reply-tweet/reply-tweet.component';\nimport { AdminGuard } from './tweets/admin.guard';\n\nexport const routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'forget', component: ForgetPasswordComponent },\n  { path: 'tweet', component: TweetComponent, canActivate: [AdminGuard] },\n  { path: 'post', component: PostTweetsComponent, canActivate: [AdminGuard] },\n  { path: \"my-post\", component: MyPostComponent, canActivate: [AdminGuard] },\n  { path: '', component: LoginComponent },\n  { path: 'edit/:id', component: MyPostEditComponent, canActivate: [AdminGuard] },\n  { path: 'reply/:id', component: ReplyTweetComponent, canActivate: [AdminGuard] }\n\n\n]\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HeaderComponent,\n    SignupComponent,\n    ForgetPasswordComponent,\n    SearchComponent,\n    TweetInfoComponent,\n    TweetComponent,\n    PostTweetsComponent,\n    MyPostComponent,\n    MyPostInfoComponent,\n    MyPostEditComponent,\n    ReplyTweetComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from 'src/app/service/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  \"error\": String;\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) { }\n  \"signupForm\": FormGroup;\n  \"isRegister\": boolean;\n  \"isExist\": boolean\n\n  ngOnInit(): void {\n    this.signupForm = new FormGroup({\n      \"firstName\": new FormControl(null, [Validators.required]),\n      \"lastName\": new FormControl(null, [Validators.required]),\n      \"email\": new FormControl(null, [Validators.required, Validators.email]),\n      \"loginId\": new FormControl(null, [Validators.required]),\n      \"password\": new FormControl(null, [Validators.required]),\n      \"confirmPassword\": new FormControl(null, [Validators.required]),\n      \"contactNumber\": new FormControl(null, [Validators.required, Validators.maxLength(10), Validators.minLength(10)])\n\n    });\n  }\n\n  onSubmitSignupForm() {\n    console.log(this.signupForm.value);\n\n    this.userService.register(this.signupForm.value).subscribe(() => {\n      this.isRegister = true;\n      setTimeout(() => {\n        this.isRegister = false;\n        this.router.navigate(['/login']);\n      }, 2000);\n\n\n    }, (responseError) => {\n      this.isExist = true;\n      setTimeout(() => {\n        this.isExist = false;\n\n      }, 2000);\n      this.isExist = true;\n      this.error = responseError.error.errorMessage;\n    })\n  }\n\n  passwordCkecks() {\n    if (this.signupForm.get('password')?.value != this.signupForm.get('confirmPassword')?.value) {\n      return true;\n    }\n    return false;\n\n  }\n\n\n}\n","<div class=\"container-fluid col-12 col-md-8 col-lg-5 mt-5 mb-5\">\n    <ul class=\"list-group text-align-center\">\n        <li class=\"list-group-item\">\n            <form class=\"mt-3 ml-4 mr-4 mb-5\" [formGroup]=\"signupForm\" (submit)=\"onSubmitSignupForm()\">\n                <h1>Signup Form</h1>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-lg-12\">\n                        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"isRegister\">\n                            Registration Successfully\n                        </div>\n                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"isExist\">\n                            User already Exist\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                        <div class=\"form-group\">\n                            <label for=\"firstName\">FirstName</label>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter your FirstName\" id=\"firstName\"\n                                formControlName=\"firstName\" required>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                        <div class=\"form-group\">\n                            <label for=\"lastName\">lastName</label>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter your lastName\" id=\"lastName\"\n                                formControlName=\"lastName\" required>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                        <div class=\"form-group\">\n                            <label for=\"email\">Email</label>\n                            <input type=\"email\" class=\"form-control\" placeholder=\"Enter your Email Id\" id=\"email\"\n                                formControlName=\"email\" required>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                        <div class=\"form-group\">\n                            <label for=\"loginId\">Login ID</label>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter your Login Id\" id=\"loginId\"\n                                formControlName=\"loginId\" required>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                        <div class=\"form-group\">\n                            <label for=\"password\">Password</label>\n                            <input type=\"password\" class=\"form-control\" placeholder=\"Enter your Password\" id=\"password\"\n                                formControlName=\"password\" required>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                        <div class=\"form-group\">\n                            <label for=\"confirmPassword\">Confirm Password</label>\n                            <input type=\"password\" class=\"form-control\" placeholder=\"Enter your Confirm Password\"\n                                id=\"confirmPassword\" formControlName=\"confirmPassword\" required>\n                            <div class=\"text-danger\" *ngIf=\"passwordCkecks()\">\n                                Password and confirm password should be same\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                        <div class=\"form-group\">\n                            <label for=\"contactNumber\">Contact Number</label>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter your Contact Number\"\n                                id=\"contactNumber\" formControlName=\"contactNumber\" maxlength=\"10\" minlength=\"10\" required>           \n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"form-row mt-2\">\n                    <span>\n                        <button type=\"submit\" class=\"btn btn-danger text-align-left\" [disabled]=\"!signupForm.valid\">\n                            Signup\n                        </button>\n                    </span>\n                </div>\n            </form>\n        </li>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TweetService } from 'src/app/service/tweet.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor(private tweetService:TweetService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSearchText(event:any){\n    this.tweetService.filter.next({loginId:event.target.value});\n  }\n}\n","<div class=\"jumbotron text-light\">\n    <div class=\"container-fluid\">\n        <h2 class=\"searchbar\">Find User</h2>\n        <div class=\"input-group\">\n            <div class=\"input-group-text\">\n                <input type=\"text\" class=\"form-control searchBox\" placeholder=\"Search User\"  (input)=\"onSearchText($event)\">\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Tweet } from '../tweets/tweet';\nimport { Observable, Subject } from 'rxjs';\nimport { ReplyTweets } from '../tweets/reply-tweets';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TweetService {\n  private loginApiUrl = environment.baseUrl;\n  filter = new Subject();\n  constructor(private httpClient: HttpClient) { }\n\n  getAllTweets(): Observable<Tweet[]> {\n    return this.httpClient.get<Tweet[]>(this.loginApiUrl + \"/all\");\n  }\n\n  postTweets(post: Tweet, loginId: string): Observable<any> {\n    return this.httpClient.post<void>(this.loginApiUrl + \"/\" + loginId + \"/\" + \"add\", post);\n  }\n\n  getTweet(loginId: string): Observable<any> {\n    return this.httpClient.get<Tweet[]>(this.loginApiUrl + \"/\" + loginId);\n  }\n\n  updateTweet(loginId: string, postId: string, post: Tweet): Observable<any> {\n    return this.httpClient.put<void>(this.loginApiUrl + \"/\" + loginId + \"/update/\" + postId, post);\n\n  }\n  deleteTweet(loginId: string, postId: string): Observable<any> {\n    return this.httpClient.delete<void>(this.loginApiUrl + \"/\" + loginId + \"/delete/\" + postId);\n  }\n\n  getPost(id: string): Observable<any> {\n    return this.httpClient.get<Tweet>(this.loginApiUrl + \"/post/\" + id);\n  }\n\n  getReply(id: string, loginId: string): Observable<any> {\n    return this.httpClient.get<ReplyTweets[]>(this.loginApiUrl + \"/\" + loginId + \"/view-reply/\" + id);\n  }\n\n \n\n  postReply(id: string, loginId: string, replyTweets: ReplyTweets): Observable<any> {\n    return this.httpClient.post<void>(this.loginApiUrl + \"/\" + loginId + \"/reply/\" + id, replyTweets);\n  }\n\n  postLike(id: string, loginId: string):Observable<any>{\n    return this.httpClient.get<void>(this.loginApiUrl+\"/\"+loginId+\"/like/\"+id)\n  }\n}\n\n","<!-- <app-search></app-search> -->\n<div class=\"container-fluid mb-5\">\n    <div class=\"row mt-2 mb-5\">\n        <app-tweet-info *ngFor=\"let tweetList of tweet\" [tweetList]=\"tweetList\" class=\"col-12 col-md-6 col-lg-3 mt-4\">\n\n        </app-tweet-info>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Tweet } from '../tweet';\nimport { TweetService } from 'src/app/service/tweet.service';\n\n@Component({\n  selector: 'app-tweet',\n  templateUrl: './tweet.component.html',\n  styleUrls: ['./tweet.component.css']\n})\nexport class TweetComponent implements OnInit {\n  'tweet': Tweet[];\n  \"temporaryList\": Tweet[]\n  constructor(private tweetService: TweetService) { }\n\n  ngOnInit(): void {\n    this.tweetService.getAllTweets().subscribe(data => {\n      this.tweet = data;\n      this.temporaryList = data;\n    })\n  \n\n \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Tweet } from 'src/app/tweets/tweet';\nimport { TweetService } from 'src/app/service/tweet.service';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-my-post-info',\n  templateUrl: './my-post-info.component.html',\n  styleUrls: ['./my-post-info.component.css']\n})\nexport class MyPostInfoComponent implements OnInit {\n  @Input() \"tweetList\": Tweet;\n  \"postTime\": string;\n  \"hours\": number;\n  \"minutes\": number;\n  \"seconds\": number;\n  \"isRemoved\":boolean;\n  constructor(private tweetService: TweetService, private router: Router,private userService:UserService) { }\n\n  ngOnInit(): void {\n    let currentDate = new Date();\n    let oldDate = new Date(this.tweetList.postTime)\n\n\n    const totalSeconds = Math.floor(Math.abs((oldDate.getTime() - currentDate.getTime()) / 1000));\n   \n    const totalMinutes = Math.floor(totalSeconds / 60);\n    const totalHours = Math.floor(totalMinutes / 60);\n    const totalDays = Math.floor(totalHours / 24);\n\n    this.hours = totalHours - (totalDays * 24);\n    this.minutes = totalMinutes - (totalDays * 24 * 60) - (this.hours * 60);\n    this.seconds = totalSeconds - (totalDays * 24 * 60 * 60) - (this.hours * 60 * 60) - (this.minutes * 60);\n\n    if ((this.hours > 0 && this.hours < 24) && (this.minutes >= 0 && this.minutes <= 59) && (this.seconds >= 0 && this.seconds <= 59)) {\n      this.postTime = this.hours + \" hr \" + this.minutes + \" m \" + this.seconds + \" s ago\" \n    }\n    if (this.hours == 0 && this.minutes == 0) {\n      this.postTime = this.seconds + \" s ago\"\n\n    }\n    if (this.hours == 0) {\n      this.postTime = this.minutes + \" m \" + this.seconds + \" s ago\"\n    }\n    if (this.hours > 24) {\n      this.postTime = oldDate.toDateString();\n    }\n  }\n  deleteTweet(id:string){\n    this.tweetService.deleteTweet(this.userService.getLoginId(),id).subscribe(()=>{\n      this.isRemoved = true;\n        this.router.navigate(['/tweet']);      \n    })\n  }\n\n}\n","\n\n<div class=\"card cards\">\n    <div class=\"card-body\">\n        <div class=\"card-title\"><i class=\"material-icons icons\">\n                perm_identity\n            </i>\n            <span class=\"text\">{{tweetList.loginId}}</span>\n            \n        </div>\n        <hr>\n        <div>\n            {{tweetList.message}}\n        </div>\n        <hr>\n        <div>\n            <span><i class=\"material-icons icons\">\n                schedule\n            </i> {{postTime}}</span>\n        </div>\n        <hr>\n        <div>\n            <span class=\"ml-auto\">\n                <a class=\"btn btn-primary\" [routerLink]=\"['/edit',tweetList.id]\">\n                <i class=\"material-icons icons\">edit</i>Edit\n                </a>\n            </span>\n            <span class=\"leftcard\">\n                <a class=\"btn btn-primary\" (click)=\"deleteTweet(tweetList.id)\">\n                <i class=\"material-icons icons\">delete_forever</i> Delete\n                </a>\n            </span>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../service/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private userService:UserService, public router: Router){}\n  canActivate():boolean\n     {\n    if(this.userService.getLoginId()!=null)\n      return true;\n      else{\n        this.router.navigate(['/login']);\n        return false;\n      }\n  }\n  \n}\n","<nav class=\"navbar navbar-expand-lg \">\n  <div class=\"navLink\" *ngIf=\"!getLoginStatus()\" routerLink=\"login\">TweetApp</div>\n    <div class=\"navLink\" *ngIf=\"getLoginStatus()\" routerLink=\"tweet\">TweetApp</div>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navBarSupportContent\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navBarSupportContent\">\n      <ul class=\"navbar-nav ml-auto mb-2\">\n        \n        <li class=\"nav-item\">\n          <a class=\"nav-link text\" routerLink=\"signup\" *ngIf=\"!getLoginStatus()\">Signup</a></li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link text\" routerLink=\"post\" *ngIf=\"getLoginStatus()\">Post</a></li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link text\" routerLink=\"my-post\" *ngIf=\"getLoginStatus()\">My Post</a></li>\n            <li class=\"nav-item\">\n            <a class=\"nav-link text\" href=\"#\" (click) =\"logout()\" *ngIf=\"getLoginStatus()\">Logout</a></li>\n       \n      </ul>\n    </div>\n  </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/service/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n  }\n\n  getLoginStatus() {\n    return this.userService.getLogInStatus();\n  }\n\n  logout() {\n    this.userService.logout(this.userService.getLoginId()).subscribe(() => {\n      this.userService.setlogInStatus(true);\n      setTimeout(() => {\n        this.router.navigate(['/login']);\n      }, 2000);\n    },error => {\n        console.log(\"error\" + JSON.stringify(error));\n      })\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}